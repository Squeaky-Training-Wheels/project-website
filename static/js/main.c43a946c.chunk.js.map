{"version":3,"sources":["theme.js","accordionComponents/Timesheet.js","accordionComponents/FourUp.js","accordionComponents/HeaderImage.js","Card.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["theme","extendTheme","colors","brand","fonts","heading","body","Timesheet","this","props","sheetName","caption","p","width","height","src","process","alt","style","textAlign","color","React","Component","FourUp","fourUpName","HeaderImage","imageName","backgroundColor","Card","name","roles","picture","py","minW","maxW","w","minH","maxH","h","bg","rounded","overflow","px","justify","mt","pb","size","spacing","align","mb","fontSize","fontWeight","fontFamily","textColor","map","role","pdfjs","GlobalWorkerOptions","workerSrc","version","App","switchTheme","bind","state","colorMode","setState","className","pr","pl","left","pt","onClick","variant","icon","href","target","stopOnHover","autoPlay","interval","transitionTime","showStatus","infiniteLoop","showThumbs","showArrows","renderIndicator","display","headerImages","headerImage","defaultIndex","allowMultiple","isExpanded","_hover","background","flex","ChevronDown","ChevronUp","direction","team","member","useKeyboardArrows","timesheets","timesheet","fourUps","fourup","file","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c43a946c.chunk.js","sourcesContent":["import { extendTheme } from '@chakra-ui/react';\n\nconst theme = extendTheme({\n    colors: {\n        brand: {\n            100: '#A9A9A9',\n            200: '#303030',\n            300: '#000000',\n\n            400: '#ed8936',\n            500: '#b55b00',\n            600: '#B2AFAF',\n            700: '#f5f5f5',\n            800: '#161616',\n            900: '#e7e4e4',\n        },\n    },\n    fonts: {\n        heading: 'Helvetica',\n        body: 'Aileron',\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport { Image, VStack, Box, Center } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nclass Timesheet extends React.Component {\n    render() {\n        const { sheetName, caption } = this.props;\n        return (\n            <Center p=\"5\">\n                <VStack>\n                    <Box width=\"100%\">\n                        <Image height=\"600\" src={`${process.env.PUBLIC_URL}/images/${sheetName}.png`} alt={sheetName} />\n                    </Box>\n                    <Box p=\"5\">\n                        <span\n                            style={{ textAlign: 'center', color: '#ed8936' }}\n                        >\n                            {caption}\n                        </span>\n                    </Box>\n                </VStack>\n            </Center>\n        );\n    }\n}\n\nTimesheet.propTypes = {\n    sheetName: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n};\n\nexport default Timesheet;\n","import React from 'react';\nimport { Box, Center, Image, VStack } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nclass FourUp extends React.Component {\n    render() {\n        const { fourUpName, caption } = this.props;\n        return (\n            <Center p=\"5\">\n                <VStack>\n                    <Box width=\"100%\">\n                        <Image\n                            height=\"400\"\n                            src={`${process.env.PUBLIC_URL}/images/${fourUpName}.png`}\n                            alt={fourUpName}\n                        />\n                    </Box>\n                    <Box p=\"5\">\n                        <span style={{ textAlign: 'center', color: '#ed8936' }}>{caption}</span>\n                    </Box>\n                </VStack>\n            </Center>\n        );\n    }\n}\n\nFourUp.propTypes = {\n    fourUpName: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n};\n\nexport default FourUp;\n","import React from 'react';\nimport { Image, VStack, Box, Center } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nclass HeaderImage extends React.Component {\n    render() {\n        const { imageName } = this.props;\n        return (\n            <Center>\n                <VStack>\n                    <Box width=\"100%\" height=\"100%\">\n                        <Image\n                            width=\"100%\"\n                            backgroundColor=\"#aaa\"\n                            src={`${process.env.PUBLIC_URL}/images/${imageName}.png`}\n                            alt={imageName}\n                        />\n                    </Box>\n                </VStack>\n            </Center>\n        );\n    }\n}\n\nHeaderImage.propTypes = {\n    imageName: PropTypes.string.isRequired,\n};\n\nexport default HeaderImage;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport {\n    Heading,\n    Avatar,\n    Box,\n    Center,\n    Flex,\n    Text,\n    Stack,\n} from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nexport default function Card(props) {\n    const { name, roles, picture } = props;\n    return (\n        <Center py={6}>\n            <Box\n                minW=\"200px\"\n                maxW=\"200px\"\n                w=\"full\"\n                minH=\"250px\"\n                maxH=\"250px\"\n                h=\"full\"\n                bg=\"brand.600\"\n                rounded=\"md\"\n                overflow=\"hidden\"\n            >\n                <Box px={6}>\n                    <Flex justify=\"center\" mt={3} pb={3}>\n                        <Avatar\n                            size=\"xl\"\n                            src={`${process.env.PUBLIC_URL}/images/${picture}`}\n                            alt=\"Author\"\n                        />\n                    </Flex>\n                    <Stack spacing={0} align=\"center\" mb={5}>\n                        <Heading\n                            fontSize=\"2xl\"\n                            fontWeight=\"semibold\"\n                            fontFamily=\"body\"\n                            color=\"brand.200\"\n                            textColor=\"brand.300\"\n                        >\n                            {name}\n                        </Heading>\n                        {\n                            roles.map((role) => (\n                                <Text key={`role-${role}`} color=\"brand.200\">{role}</Text>\n                            ))\n                        }\n                    </Stack>\n                </Box>\n            </Box>\n        </Center>\n    );\n}\n\nCard.propTypes = {\n    name: PropTypes.string.isRequired,\n    roles: PropTypes.arrayOf(PropTypes.string).isRequired,\n    picture: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { Carousel } from 'react-responsive-carousel';\nimport { AiFillGithub } from 'react-icons/ai';\nimport { MdNightsStay } from 'react-icons/md';\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Heading,\n    Text,\n    Wrap,\n    Center,\n    Stack,\n    Flex,\n    Spacer,\n    IconButton,\n    LinkBox,\n    LinkOverlay,\n    ChakraProvider,\n} from '@chakra-ui/react';\nimport { ChevronUpIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport theme from './theme';\n\nimport Timesheet from './accordionComponents/Timesheet';\nimport FourUp from './accordionComponents/FourUp';\nimport HeaderImage from './accordionComponents/HeaderImage';\nimport Card from './Card';\n\nimport timesheets from './accordionData/timesheets.json';\nimport fourUps from './accordionData/fourups.json';\nimport headerImages from './accordionData/headerImages.json';\nimport team from './team.json';\n\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.switchTheme = this.switchTheme.bind(this);\n\n        this.state = {\n            colorMode: 'light',\n        };\n    }\n\n    switchTheme() {\n        const { colorMode } = this.state;\n        if (colorMode === 'light') {\n            this.setState({ colorMode: 'dark' });\n        } else {\n            this.setState({ colorMode: 'light' });\n        }\n    }\n\n    render() {\n        const { colorMode } = this.state;\n        return (\n            <ChakraProvider theme={theme}>\n                <Box className=\"App\" bg={colorMode === 'light' ? 'brand.900' : 'brand.300'}>\n                    <Heading align=\"left\" pr=\"2\" pl=\"2\" pb=\"0\" left=\"16px\">\n                        <Flex>\n                            <Text\n                                pt=\"2\"\n                                fontSize=\"2xl\"\n                                style={{ color: '#ed8936' }}\n                            >\n                                RIT SENIOR PROJECT\n                            </Text>\n                            <Text\n                                pt=\"2\"\n                                fontSize=\"2xl\"\n                                style={\n                                    colorMode === 'light'\n                                        ? { color: '#161616' } : { color: '#A9A9A9' }\n                                }\n                            >\n                                - PALMYRA RACING ASSOCIATION CLUB MANAGER\n                            </Text>\n                            <Spacer />\n                            <IconButton\n                                onClick={this.switchTheme}\n                                mt={2}\n                                p={0}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                fontSize=\"24px\"\n                                color={colorMode === 'light' ? 'brand.300' : 'brand.100'}\n                                icon={<MdNightsStay />}\n                            />\n                            <LinkBox p=\"0\">\n                                <LinkOverlay p=\"0\" href=\"https://github.com/Squeaky-Training-Wheels\" target=\"_blank\">\n                                    <IconButton\n                                        size=\"sm\"\n                                        variant=\"ghost\"\n                                        p=\"0\"\n                                        fontSize=\"24px\"\n                                        color={colorMode === 'light' ? 'brand.200' : 'brand.100'}\n                                        icon={<AiFillGithub />}\n                                    />\n                                </LinkOverlay>\n                            </LinkBox>\n                        </Flex>\n                    </Heading>\n                    <Carousel\n                        stopOnHover={false}\n                        autoPlay\n                        interval={10000}\n                        transitionTime={2500}\n                        showStatus={false}\n                        infiniteLoop\n                        showThumbs={false}\n                        showArrows={false}\n                        renderIndicator={false}\n                        display=\"flex\"\n                    >\n                        {\n                            headerImages.map((headerImage) => (\n                                <HeaderImage key={headerImage.imageName} imageName={headerImage.imageName} />\n                            ))\n                        }\n                    </Carousel>\n                    <Accordion defaultIndex={[0]} allowMultiple>\n                        <AccordionItem>\n                            {\n                                ({ isExpanded }) => (\n                                    <div>\n                                        <h2>\n                                            <AccordionButton\n                                                bg={colorMode === 'light' ? 'brand.900' : 'brand.300'}\n                                                _hover={\n                                                    colorMode === 'light'\n                                                        ? { background: 'brand.600' } : { background: 'brand.200' }\n                                                }\n                                            >\n                                                <Box\n                                                    fontSize=\"2xl\"\n                                                    fontWeight=\"semibold\"\n                                                    flex=\"1\"\n                                                    textAlign=\"left\"\n                                                    color={colorMode === 'light' ? 'brand.800' : 'brand.100'}\n                                                >\n                                                    The Team\n                                                </Box>\n                                                {\n                                                    isExpanded ? (\n                                                        <ChevronDownIcon\n                                                            fontSize=\"35px\"\n                                                            color=\"brand.500\"\n                                                        />\n                                                    ) : (\n                                                        <ChevronUpIcon\n                                                            fontSize=\"35px\"\n                                                            color=\"brand.500\"\n                                                        />\n                                                    )\n                                                }\n                                            </AccordionButton>\n                                        </h2>\n                                        <AccordionPanel\n                                            pb={4}\n                                            bg={colorMode === 'light' ? 'brand.700' : 'brand.200'}\n                                        >\n                                            <Text\n                                                fontSize=\"3xl\"\n                                                fontWeight=\"bold\"\n                                                textColor={colorMode === 'light' ? 'brand.300' : 'brand.100'}\n                                            >\n                                                Seniors\n                                            </Text>\n                                            <Stack direction=\"row\" justify=\"center\">\n                                                {\n                                                    team.map((member) => (\n                                                        <Card\n                                                            key={`card-${member.name}`}\n                                                            name={member.name}\n                                                            roles={member.roles}\n                                                            picture={member.picture}\n                                                        />\n                                                    ))\n                                                }\n                                            </Stack>\n                                            <Text\n                                                fontSize=\"3xl\"\n                                                fontWeight=\"bold\"\n                                                textColor={colorMode === 'light' ? 'brand.300' : 'brand.100'}\n                                            >\n                                                Coach and Sponsor\n                                            </Text>\n                                            <Stack direction=\"row\" justify=\"center\">\n                                                <Card\n                                                    name=\"Bruce Herring\"\n                                                    roles={['Faculty Coach']}\n                                                    picture=\"bruce.jpeg\"\n                                                />\n                                                <Card\n                                                    name=\"Alan Delimon\"\n                                                    roles={['Sponsor']}\n                                                    picture=\"alan.jpeg\"\n                                                />\n                                            </Stack>\n                                        </AccordionPanel>\n                                    </div>\n                                )\n                            }\n                        </AccordionItem>\n                        <AccordionItem>\n                            {\n                                ({ isExpanded }) => (\n                                    <>\n                                        <h2>\n                                            <AccordionButton\n                                                bg={colorMode === 'light' ? 'brand.900' : 'brand.300'}\n                                                _hover={\n                                                    colorMode === 'light'\n                                                        ? { background: 'brand.600' } : { background: 'brand.200' }\n                                                }\n                                            >\n                                                <Box\n                                                    fontSize=\"2xl\"\n                                                    fontWeight=\"semibold\"\n                                                    flex=\"1\"\n                                                    textAlign=\"left\"\n                                                    color={colorMode === 'light' ? 'brand.800' : 'brand.100'}\n                                                >\n                                                    Project Synopsis\n                                                </Box>\n                                                {\n                                                    isExpanded ? (\n                                                        <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    ) : (\n                                                        <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    )\n                                                }\n                                            </AccordionButton>\n                                        </h2>\n                                        <AccordionPanel\n                                            pb={4}\n                                            bg={colorMode === 'light' ? 'brand.700' : 'brand.200'}\n                                        >\n                                            <Text\n                                                fontSize=\"xl\"\n                                                textColor={colorMode === 'light' ? 'brand.300' : 'brand.100'}\n                                            >\n                                                The Palmyra Racing Association Club Manager is a web and mobile\n                                                application\n                                                sponsored by the Palmyra Racing Association in order to facilitate the\n                                                management of many facets of the club, including membership, member\n                                                participation, and event tracking and signups. This project replaces an\n                                                existing application which is already fairly outdated by web standards\n                                                and is in need of a visual touch up. One of the primary goals of the\n                                                application is ease of use and accessibility in order to get\n                                                non-tech-savvy club members to use the application.\n                                            </Text>\n                                            <br />\n                                            <Text\n                                                fontSize=\"xl\"\n                                                textColor={colorMode === 'light' ? 'brand.300' : 'brand.100'}\n                                            >\n                                                Club members can use the application for updating their personal\n                                                information, renewing their membership, and signing up to\n                                                volunteer at events. Club board members can use the application\n                                                to view and edit membership data for all active members as well\n                                                as signup information for every event. Board members can also\n                                                create new events and update existing ones, as well as assign club\n                                                members to events manually. These features are currently provided via\n                                                separate applications, and this application seeks to unify them into\n                                                one easy to use, modernized user interface.\n                                            </Text>\n\n                                        </AccordionPanel>\n                                    </>\n                                )\n                            }\n                        </AccordionItem>\n                        <AccordionItem>\n                            {\n                                ({ isExpanded }) => (\n                                    <>\n                                        <h2>\n                                            <AccordionButton\n                                                bg={colorMode === 'light' ? 'brand.900' : 'brand.300'}\n                                                _hover={\n                                                    colorMode === 'light'\n                                                        ? { background: 'brand.600' } : { background: 'brand.200' }\n                                                }\n                                            >\n                                                <Box\n                                                    fontSize=\"2xl\"\n                                                    fontWeight=\"semibold\"\n                                                    flex=\"1\"\n                                                    textAlign=\"left\"\n                                                    color={colorMode === 'light' ? 'brand.800' : 'brand.100'}\n                                                >\n                                                    Time Tracking\n                                                </Box>\n                                                {\n                                                    isExpanded ? (\n                                                        <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    ) : (\n                                                        <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    )\n                                                }\n                                            </AccordionButton>\n                                        </h2>\n                                        <AccordionPanel\n                                            pb={4}\n                                            bg={colorMode === 'light' ? 'brand.700' : 'brand.200'}\n                                        >\n                                            <Carousel showStatus={false} showThumbs={false} useKeyboardArrows>\n                                                {\n                                                    timesheets.map((timesheet) => (\n                                                        <Timesheet\n                                                            key={timesheet.sheetName}\n                                                            sheetName={timesheet.sheetName}\n                                                            caption={timesheet.caption}\n                                                        />\n                                                    ))\n                                                }\n                                            </Carousel>\n                                        </AccordionPanel>\n                                    </>\n                                )\n                            }\n                        </AccordionItem>\n                        <AccordionItem>\n                            {\n                                ({ isExpanded }) => (\n                                    <>\n                                        <h2>\n                                            <AccordionButton\n                                                bg={colorMode === 'light' ? 'brand.900' : 'brand.300'}\n                                                _hover={\n                                                    colorMode === 'light'\n                                                        ? { background: 'brand.600' } : { background: 'brand.200' }\n                                                }\n                                            >\n                                                <Box\n                                                    fontSize=\"2xl\"\n                                                    fontWeight=\"semibold\"\n                                                    flex=\"1\"\n                                                    textAlign=\"left\"\n                                                    color={colorMode === 'light' ? 'brand.800' : 'brand.100'}\n                                                >\n                                                    Weekly Four Ups\n                                                </Box>\n                                                {\n                                                    isExpanded ? (\n                                                        <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    ) : (\n                                                        <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    )\n                                                }\n                                            </AccordionButton>\n                                        </h2>\n                                        <AccordionPanel\n                                            pb={4}\n                                            bg={colorMode === 'light' ? 'brand.700' : 'brand.200'}\n                                        >\n                                            <Carousel showStatus={false} showThumbs={false} useKeyboardArrows>\n                                                {\n                                                    fourUps.map((fourup) => (\n                                                        <FourUp\n                                                            key={fourup.fourUpName}\n                                                            fourUpName={fourup.fourUpName}\n                                                            caption={fourup.caption}\n                                                        />\n                                                    ))\n                                                }\n                                            </Carousel>\n                                        </AccordionPanel>\n                                    </>\n                                )\n                            }\n                        </AccordionItem>\n                        <AccordionItem>\n                            {\n                                ({ isExpanded }) => (\n                                    <>\n                                        <h2>\n                                            <AccordionButton\n                                                bg={colorMode === 'light' ? 'brand.900' : 'brand.300'}\n                                                _hover={\n                                                    colorMode === 'light'\n                                                        ? { background: 'brand.600' } : { background: 'brand.200' }\n                                                }\n                                            >\n                                                <Box\n                                                    fontSize=\"2xl\"\n                                                    fontWeight=\"semibold\"\n                                                    flex=\"1\"\n                                                    textAlign=\"left\"\n                                                    color={colorMode === 'light' ? 'brand.800' : 'brand.100'}\n                                                >\n                                                    Project Plan\n                                                </Box>\n                                                {\n                                                    isExpanded ? (\n                                                        <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    ) : (\n                                                        <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                                    )\n                                                }\n                                            </AccordionButton>\n                                        </h2>\n                                        <AccordionPanel\n                                            pb={4}\n                                            bg={colorMode === 'light' ? 'brand.700' : 'brand.200'}\n                                        >\n                                            <Center>\n                                                <Document\n                                                    file={`${process.env.PUBLIC_URL}/ProjectPlan.pdf`}\n                                                >\n                                                    <Wrap justify=\"center\">\n                                                        <Page pageNumber={1} />\n                                                        <Page pageNumber={2} />\n                                                        <Page pageNumber={3} />\n                                                        <Page pageNumber={4} />\n                                                        <Page pageNumber={5} />\n                                                        <Page pageNumber={6} />\n                                                    </Wrap>\n                                                </Document>\n                                            </Center>\n                                        </AccordionPanel>\n                                    </>\n                                )\n                            }\n                        </AccordionItem>\n                    </Accordion>\n                </Box>\n            </ChakraProvider>\n        );\n    }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/russo-one';\nimport '@fontsource/aileron';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}