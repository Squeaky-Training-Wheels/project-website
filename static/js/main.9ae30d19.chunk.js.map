{"version":3,"sources":["accordionComponents/Timesheet.js","accordionComponents/FourUp.js","accordionComponents/HeaderImage.js","Card.jsx","App.jsx","reportWebVitals.js","theme.js","index.js"],"names":["Timesheet","this","props","sheetName","caption","p","width","height","src","process","alt","style","textAlign","React","Component","FourUp","fourUpName","HeaderImage","imageName","backgroundColor","Card","name","roles","picture","py","minW","maxW","w","minH","maxH","h","bg","boxShadow","rounded","overflow","px","justify","mt","pb","size","spacing","align","mb","fontSize","fontWeight","fontFamily","color","map","role","pdfjs","GlobalWorkerOptions","workerSrc","version","App","className","pr","pl","left","pt","href","target","variant","icon","stopOnHover","autoPlay","interval","transitionTime","showStatus","infiniteLoop","showThumbs","showArrows","renderIndicator","display","headerImages","headerImage","defaultIndex","allowMultiple","isExpanded","_hover","background","flex","ChevronDown","ChevronUp","direction","team","member","useKeyboardArrows","timesheets","timesheet","fourUps","fourup","file","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","colors","brand","fonts","heading","body","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ae30d19.chunk.js","sourcesContent":["import React from 'react';\nimport { Image, VStack, Box, Center } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nclass Timesheet extends React.Component {\n    render() {\n        const { sheetName, caption } = this.props;\n        return (\n            <Center p=\"5\">\n                <VStack>\n                    <Box width=\"100%\">\n                        <Image height=\"600\" src={`${process.env.PUBLIC_URL}/images/${sheetName}.png`} alt={sheetName} />\n                    </Box>\n                    <Box p=\"5\">\n                        <span style={{ textAlign: 'center' }}>{caption}</span>\n                    </Box>\n                </VStack>\n            </Center>\n        );\n    }\n}\n\nTimesheet.propTypes = {\n    sheetName: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n};\n\nexport default Timesheet;\n","import React from 'react';\nimport { Box, Center, Image, VStack } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nclass FourUp extends React.Component {\n    render() {\n        const { fourUpName, caption } = this.props;\n        return (\n            <Center p=\"5\">\n                <VStack>\n                    <Box width=\"100%\">\n                        <Image\n                            height=\"400\"\n                            src={`${process.env.PUBLIC_URL}/images/${fourUpName}.png`}\n                            alt={fourUpName}\n                        />\n                    </Box>\n                    <Box p=\"5\">\n                        <span style={{ textAlign: 'center' }}>{caption}</span>\n                    </Box>\n                </VStack>\n            </Center>\n        );\n    }\n}\n\nFourUp.propTypes = {\n    fourUpName: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n};\n\nexport default FourUp;\n","import React from 'react';\nimport { Image, VStack, Box, Center } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nclass HeaderImage extends React.Component {\n    render() {\n        const { imageName } = this.props;\n        return (\n            <Center>\n                <VStack>\n                    <Box width=\"100%\" height=\"100%\">\n                        <Image\n                            width=\"100%\"\n                            backgroundColor=\"#aaa\"\n                            src={`${process.env.PUBLIC_URL}/images/${imageName}.png`}\n                            alt={imageName}\n                        />\n                    </Box>\n                </VStack>\n            </Center>\n        );\n    }\n}\n\nHeaderImage.propTypes = {\n    imageName: PropTypes.string.isRequired,\n};\n\nexport default HeaderImage;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport {\n    Heading,\n    Avatar,\n    Box,\n    Center,\n    Flex,\n    Text,\n    Stack,\n} from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nexport default function Card(props) {\n    const { name, roles, picture } = props;\n    return (\n        <Center py={6}>\n            <Box\n                minW=\"200px\"\n                maxW=\"200px\"\n                w=\"full\"\n                minH=\"250px\"\n                maxH=\"250px\"\n                h=\"full\"\n                bg=\"brand.600\"\n                boxShadow=\"2xl\"\n                rounded=\"md\"\n                overflow=\"hidden\"\n            >\n                <Box px={6}>\n                    <Flex justify=\"center\" mt={3} pb={3}>\n                        <Avatar\n                            size=\"xl\"\n                            src={`${process.env.PUBLIC_URL}/images/${picture}`}\n                            alt=\"Author\"\n                        />\n                    </Flex>\n                    <Stack spacing={0} align=\"center\" mb={5}>\n                        <Heading fontSize=\"2xl\" fontWeight=\"semibold\" fontFamily=\"body\" color=\"brand.200\">\n                            {name}\n                        </Heading>\n                        {\n                            roles.map((role) => (\n                                <Text key={`role-${role}`} color=\"brand.200\">{role}</Text>\n                            ))\n                        }\n                    </Stack>\n                </Box>\n            </Box>\n        </Center>\n    );\n}\n\nCard.propTypes = {\n    name: PropTypes.string.isRequired,\n    roles: PropTypes.arrayOf(PropTypes.string).isRequired,\n    picture: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { Carousel } from 'react-responsive-carousel';\nimport { AiFillGithub } from 'react-icons/ai';\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Heading,\n    Text,\n    Wrap,\n    Center,\n    Stack,\n    Flex,\n    Spacer,\n    IconButton,\n    LinkBox,\n    LinkOverlay,\n} from '@chakra-ui/react';\nimport { ChevronUpIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport Timesheet from './accordionComponents/Timesheet';\nimport FourUp from './accordionComponents/FourUp';\nimport HeaderImage from './accordionComponents/HeaderImage';\nimport Card from './Card';\n\nimport timesheets from './accordionData/timesheets.json';\nimport fourUps from './accordionData/fourups.json';\nimport headerImages from './accordionData/headerImages.json';\nimport team from './team.json';\n\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction App() {\n    return (\n        <Box className=\"App\" bg=\"brand.900\">\n            <Heading align=\"left\" pr=\"2\" pl=\"2\" pb=\"0\" left=\"16px\">\n                <Flex>\n                    <Text pt=\"2\" fontSize=\"2xl\" style={{ color: '#ed8936' }}>\n                        RIT SENIOR PROJECT\n                    </Text>\n                    <Text pt=\"2\" pl=\"2\" fontSize=\"2xl\" style={{ color: '#161616' }}>\n                        - PALMYRA RACING ASSOCIATION CLUB MANAGER\n                    </Text>\n                    <Spacer />\n                    <LinkBox p=\"0\">\n                        <LinkOverlay p=\"0\" href=\"https://github.com/Squeaky-Training-Wheels\" target=\"_blank\">\n                            <IconButton size=\"sm\" variant=\"ghost\" p=\"0\" fontSize=\"24px\" icon={<AiFillGithub />} />\n                        </LinkOverlay>\n                    </LinkBox>\n                </Flex>\n            </Heading>\n            <Carousel\n                stopOnHover={false}\n                autoPlay\n                interval={10000}\n                transitionTime={2500}\n                showStatus={false}\n                infiniteLoop\n                showThumbs={false}\n                showArrows={false}\n                renderIndicator={false}\n                display=\"flex\"\n            >\n                {\n                    headerImages.map((headerImage) => (\n                        <HeaderImage key={headerImage.imageName} imageName={headerImage.imageName} />\n                    ))\n                }\n            </Carousel>\n            <Accordion defaultIndex={[0]} allowMultiple>\n                <AccordionItem>\n                    {\n                        ({ isExpanded }) => (\n                            <div>\n                                <h2>\n                                    <AccordionButton\n                                        bg=\"brand.900\"\n                                        _hover={{ background: 'brand.600' }}\n                                    >\n                                        <Box\n                                            fontSize=\"2xl\"\n                                            fontWeight=\"semibold\"\n                                            flex=\"1\"\n                                            textAlign=\"left\"\n                                            color=\"brand.800\"\n                                        >\n                                            The Team\n                                        </Box>\n                                        {\n                                            isExpanded ? (\n                                                <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            ) : (\n                                                <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            )\n                                        }\n                                    </AccordionButton>\n                                </h2>\n                                <AccordionPanel pb={4} bg=\"brand.700\">\n                                    <Text fontSize=\"3xl\" fontWeight=\"bold\">Seniors</Text>\n                                    <Stack direction=\"row\" justify=\"center\">\n                                        {\n                                            team.map((member) => (\n                                                <Card\n                                                    key={`card-${member.name}`}\n                                                    name={member.name}\n                                                    roles={member.roles}\n                                                    picture={member.picture}\n                                                />\n                                            ))\n                                        }\n                                    </Stack>\n                                    <Text fontSize=\"3xl\" fontWeight=\"bold\">Coach and Sponsor</Text>\n                                    <Stack direction=\"row\" justify=\"center\">\n                                        <Card\n                                            name=\"Bruce Herring\"\n                                            roles={['Faculty Coach']}\n                                            picture=\"bruce.jpeg\"\n                                        />\n                                        <Card\n                                            name=\"Alan Delimon\"\n                                            roles={['Sponsor']}\n                                            picture=\"alan.jpeg\"\n                                        />\n                                    </Stack>\n                                </AccordionPanel>\n                            </div>\n                        )\n                    }\n                </AccordionItem>\n                <AccordionItem>\n                    {\n                        ({ isExpanded }) => (\n                            <>\n                                <h2>\n                                    <AccordionButton bg=\"brand.900\" _hover={{ background: 'brand.600' }}>\n                                        <Box\n                                            fontSize=\"2xl\"\n                                            fontWeight=\"semibold\"\n                                            flex=\"1\"\n                                            textAlign=\"left\"\n                                            color=\"brand.800\"\n                                        >\n                                            Project Synopsis\n                                        </Box>\n                                        {\n                                            isExpanded ? (\n                                                <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            ) : (\n                                                <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            )\n                                        }\n                                    </AccordionButton>\n                                </h2>\n                                <AccordionPanel pb={4} bg=\"brand.700\">\n                                    <Text fontSize=\"xl\">\n                                        The Palmyra Racing Association Club Manager is a web and mobile application\n                                        sponsored by the Palmyra Racing Association in order to facilitate the\n                                        management of many facets of the club, including membership, member\n                                        participation, and event tracking and signups. This project replaces an\n                                        existing application which is already fairly outdated by web standards and is in\n                                        need of a visual touch up. One of the primary goals of the application is ease\n                                        of use and accessibility in order to get non-tech-savvy club members to use\n                                        the application.\n                                    </Text>\n                                    <br />\n                                    <Text fontSize=\"xl\">\n                                        Club members can use the application for updating their personal information,\n                                        renewing their membership, and signing up to volunteer at events. Club board\n                                        members can use the application to view and edit membership data for all\n                                        active members as well as signup information for every event. Board members\n                                        can also create new events and update existing ones, as well as assign club\n                                        members to events manually. These features are currently provided via separate\n                                        applications, and this application seeks to unify them into one easy to use,\n                                        modernized user interface.\n                                    </Text>\n\n                                </AccordionPanel>\n                            </>\n                        )\n                    }\n                </AccordionItem>\n                <AccordionItem>\n                    {\n                        ({ isExpanded }) => (\n                            <>\n                                <h2>\n                                    <AccordionButton bg=\"brand.900\" _hover={{ background: 'brand.600' }}>\n                                        <Box\n                                            fontSize=\"2xl\"\n                                            fontWeight=\"semibold\"\n                                            flex=\"1\"\n                                            textAlign=\"left\"\n                                            color=\"brand.800\"\n                                        >\n                                            Time Tracking\n                                        </Box>\n                                        {\n                                            isExpanded ? (\n                                                <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            ) : (\n                                                <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            )\n                                        }\n                                    </AccordionButton>\n                                </h2>\n                                <AccordionPanel pb={4} bg=\"brand.700\">\n                                    <Carousel showStatus={false} showThumbs={false} useKeyboardArrows>\n                                        {\n                                            timesheets.map((timesheet) => (\n                                                <Timesheet\n                                                    key={timesheet.sheetName}\n                                                    sheetName={timesheet.sheetName}\n                                                    caption={timesheet.caption}\n                                                />\n                                            ))\n                                        }\n                                    </Carousel>\n                                </AccordionPanel>\n                            </>\n                        )\n                    }\n                </AccordionItem>\n                <AccordionItem>\n                    {\n                        ({ isExpanded }) => (\n                            <>\n                                <h2>\n                                    <AccordionButton bg=\"brand.900\" _hover={{ background: 'brand.600' }}>\n                                        <Box\n                                            fontSize=\"2xl\"\n                                            fontWeight=\"semibold\"\n                                            flex=\"1\"\n                                            textAlign=\"left\"\n                                            color=\"brand.800\"\n                                        >\n                                            Weekly Four Ups\n                                        </Box>\n                                        {\n                                            isExpanded ? (\n                                                <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            ) : (\n                                                <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            )\n                                        }\n                                    </AccordionButton>\n                                </h2>\n                                <AccordionPanel pb={4} bg=\"brand.700\">\n                                    <Carousel showStatus={false} showThumbs={false} useKeyboardArrows>\n                                        {\n                                            fourUps.map((fourup) => (\n                                                <FourUp\n                                                    key={fourup.fourUpName}\n                                                    fourUpName={fourup.fourUpName}\n                                                    caption={fourup.caption}\n                                                />\n                                            ))\n                                        }\n                                    </Carousel>\n                                </AccordionPanel>\n                            </>\n                        )\n                    }\n                </AccordionItem>\n                <AccordionItem>\n                    {\n                        ({ isExpanded }) => (\n                            <>\n                                <h2>\n                                    <AccordionButton bg=\"brand.900\" _hover={{ background: 'brand.600' }}>\n                                        <Box\n                                            fontSize=\"2xl\"\n                                            fontWeight=\"semibold\"\n                                            flex=\"1\"\n                                            textAlign=\"left\"\n                                            color=\"brand.800\"\n                                        >\n                                            Project Plan\n                                        </Box>\n                                        {\n                                            isExpanded ? (\n                                                <ChevronDownIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            ) : (\n                                                <ChevronUpIcon fontSize=\"35px\" color=\"brand.400\" />\n                                            )\n                                        }\n                                    </AccordionButton>\n                                </h2>\n                                <AccordionPanel pb={4} bg=\"brand.700\">\n                                    <Center>\n                                        <Document\n                                            file={`${process.env.PUBLIC_URL}/ProjectPlan.pdf`}\n                                        >\n                                            <Wrap justify=\"center\">\n                                                <Page pageNumber={1} />\n                                                <Page pageNumber={2} />\n                                                <Page pageNumber={3} />\n                                                <Page pageNumber={4} />\n                                                <Page pageNumber={5} />\n                                                <Page pageNumber={6} />\n                                            </Wrap>\n                                        </Document>\n                                    </Center>\n                                </AccordionPanel>\n                            </>\n                        )\n                    }\n                </AccordionItem>\n            </Accordion>\n        </Box>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from '@chakra-ui/react';\n\nconst theme = extendTheme({\n    colors: {\n        brand: {\n            100: '#171923',\n            200: '#000000',\n            300: '#3d3f4b',\n            400: '#ed8936',\n            500: '#b55b00',\n            600: '#B2AFAF',\n            700: '#f5f5f5',\n            800: '#161616',\n            900: '#e7e4e4',\n        },\n    },\n    fonts: {\n        heading: 'Helvetica',\n        body: 'Aileron',\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\nimport '@fontsource/russo-one';\nimport '@fontsource/aileron';\n\nReactDOM.render(\n    <React.StrictMode>\n        <ChakraProvider theme={theme}>\n            <App />\n        </ChakraProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}